apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o codefirts.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: clientcodefirst
      name: clientcodefirst
    spec:
      ports:
        - name: "5091"
          port: 5091
          targetPort: 5091
      selector:
        io.kompose.service: clientcodefirst
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o codefirts.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: mysql
      name: mysql
    spec:
      ports:
        - name: "3309"
          port: 3309
          targetPort: 3306
      selector:
        io.kompose.service: mysql
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o codefirts.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: clientcodefirst
      name: clientcodefirst
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: clientcodefirst
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o codefirts.yaml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/my-network-mysql: "true"
            io.kompose.service: clientcodefirst
        spec:
          containers:
            - image: clientcodefirst
              name: clientcodefirst
              ports:
                - containerPort: 5091
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: my-network-mysql
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/my-network-mysql: "true"
      podSelector:
        matchLabels:
          io.kompose.network/my-network-mysql: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o codefirts.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: mysql
      name: mysql
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mysql
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o codefirts.yaml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/my-network-mysql: "true"
            io.kompose.service: mysql
        spec:
          containers:
            - args:
                - --default-authentication-plugin=mysql_native_password
              env:
                - name: MYSQL_DATABASE
                  value: clientcodedb
                - name: MYSQL_PASSWORD
                  value: admin
                - name: MYSQL_ROOT_PASSWORD
                  value: root
                - name: MYSQL_TCP_PORT
                  value: "3306"
                - name: MYSQL_USER
                  value: userinfo
              image: mysql/mysql-server
              name: mysql
              ports:
                - containerPort: 3306
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/mysql
                  name: mysql-data
          restartPolicy: Always
          volumes:
            - name: mysql-data
              persistentVolumeClaim:
                claimName: mysql-data
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mysql-data
      name: mysql-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
kind: List
metadata: {}

